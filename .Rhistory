library(leaflet.providers)
library(maps)
library(viridis)
library(viridisLite)
library(sp)
library(quantmod)
library(plot3D)
library(sf)
library(RColorBrewer)
library(gganimate)
unzip(zipfile="./homicide.zip")
data <- read.csv("database.csv")
glimpse(data)
data %>% group_by(State) %>%
summarize(Murder_Count = n()) %>%
arrange(desc(Murder_Count)) %>%
kbl() %>% kable_paper()  %>% scroll_box(height = "800px")
data %>%
plot_ly(x = ~State) %>%
add_histogram(color = I("red"),
stroke = I("black"),
span = I(2)
, alpha = 0.6) %>% group_by(State) %>%
summarise(Murder_Count = n()) %>%
layout(title = "Histogram of States count by Murder Cases", xaxis = list(title = "States"), yaxis = list(title = "Murder Case Count"))
top10_Murder_Cases <- data %>% group_by(State) %>% summarize(Murder_Count = n()) %>% arrange(desc(Murder_Count)) %>% head(10)
top10_Murder_Cases
# I shown the top Murder Cases count in the Histogram to compare
top10_Murder_Cases %>% plot_ly(x = ~Murder_Count, y = ~State, color = I("dark red"),
stroke = I("black"),
span = I(2)
, alpha = 0.6)%>% layout(title = "Histogram of top 10 States By Murder Case", xaxis = list(title = "States"), yaxis = list(title = "Murder Case Count"))
data %>% group_by(Weapon) %>%
summarize(Most_Weapon_Used = n()) %>%
arrange(desc(Most_Weapon_Used)) %>%
kbl() %>% kable_paper() %>% scroll_box(height = "800px")
states <- states(cb = TRUE, class = "sf") %>%
filter(!as.numeric(STATEFP) %in% c(2, 15, 60, 66, 69, 72, 78)) %>%
mutate(var = rnorm(nrow(.)))
data_murder_by_states <- data %>% group_by(State) %>% summarize(murder = n()) %>% arrange(desc(murder))
heatmap_data_murder_by_states <- states %>% left_join(data_murder_by_states, by = c('NAME' = 'State'))
ggplot(heatmap_data_murder_by_states) +
geom_sf(aes(fill = murder ), colour = alpha("black", 1 / 2), size = 0.2) +
scale_fill_viridis_c(option = "turbo" ,
begin = 0.1, name = "Murder Count",label = scales::comma) + geom_sf_text(aes(label = NAME), colour = "black") +
labs(title = "Heat Map of the United States",
subtitle = "Count by Murder in each State") +
theme(panel.background = element_rect(colour = "black")) +
theme_bw()
Texas <- tigris:: counties(state = "TX", cb = T, class ='sf')
Data_City_by_Murder <- data %>% group_by(City) %>% summarize(Murder = n()) %>% arrange(desc(Murder))
heat_map_of_Texas <- Texas %>% left_join(Data_City_by_Murder, by = c("NAME" = 'City'))
ggplot(heat_map_of_Texas) + geom_sf(aes(fill = Murder)) + scale_fill_viridis_c(option = "inferno" , begin = 0.1, label = scales::comma) + stat_sf_coordinates() + theme(legend.position="right",
plot.title = element_text(hjust = 0.5,color = "dark red", size = 16, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, color = "dark red", size = 14, face = "bold"),
plot.caption = element_text(color = "Gray60"))+
guides(fill = guide_legend(title = "Murder Count", title.position = "top", title.theme =element_text(size = 10, face = "bold",colour = "Black",angle = 0))) + geom_sf_text(aes(label = NAME), colour = "grey", alpha = 0.6) + labs(title = "Murder Count by Counties in Texas", subtitle = "1980 to 2014")
Texas <- tigris:: counties(state = "TX", cb = T, class ='sf')
Data_City_by_Murder <- data %>% group_by(City) %>% summarize(Murder = n()) %>% arrange(desc(Murder))
heat_map_of_Texas <- Texas %>% left_join(Data_City_by_Murder, by = c("NAME" = 'City'))
ggplot(heat_map_of_Texas) + geom_sf(aes(fill = Murder)) + scale_fill_viridis_c(option = "inferno" , begin = 0.1, label = scales::comma) + stat_sf_coordinates() + theme(legend.position="right",
plot.title = element_text(hjust = 0.5,color = "dark red", size = 16, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, color = "dark red", size = 14, face = "bold"),
plot.caption = element_text(color = "Gray60"))+
guides(fill = guide_legend(title = "Murder Count", title.position = "top", title.theme =element_text(size = 10, face = "bold",colour = "Black",angle = 0))) + geom_sf_text(aes(label = NAME), colour = "grey", alpha = 0.6) + labs(title = "Murder Count by Counties in Texas", subtitle = "1980 to 2014")
California <- tigris:: counties(state = "CA", cb = T, class ='sf')
Data_City_by_Murder <- data %>% group_by(City) %>% summarize(Murder = n()) %>% arrange(desc(Murder))
heat_map_of_California <- California %>% left_join(Data_City_by_Murder, by = c("NAME" = 'City'))
# This is the heatmap for California
ggplot(data = heat_map_of_California) + geom_sf(aes(fill = Murder), color = "black", size = 0.5) + scale_fill_viridis_c(option = "mako" , begin = 0.1, label = scales::comma) + stat_sf_coordinates() + theme(legend.position="right",
plot.title = element_text(hjust = 0.5,color = "dark red", size = 16, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,color = "dark red", size = 14, face = "bold"),
plot.caption = element_text(color = "dark grey"))+
guides(fill = guide_legend(title = "Murder Count", title.position = "top", title.theme =element_text(size = 10, face = "bold",colour = "Black",angle = 0))) + geom_sf_text(aes(label = NAME), colour = "dark grey", alpha = 0.6) + labs(title = "Murder Count by Cities in California", subtitle = "1980 to 2014")
knitr::include_graphics("thankyou.jpg")
knitr::opts_chunk$set(echo = TRUE, fig.align = 'center')
# This is the bubble map
plot_ly(Gender_Data_with_Total, x = ~Female_Total, y = ~Male_Total, text = ~State, type = 'scatter', mode = 'markers', size = ~Sum_Gender, color = ~State, colors = "Set2",
#Choosing the range of the bubbles' sizes:
sizes = c(10, 50),
marker = list(opacity = 0.5, sizemode = 'diameter'))  %>% layout(title = "Bubble Graph of Female and Male total Murder Cases", subtitle = "By States", xaxis = list(title = "Female") , yaxis = list(title = "Male"), legend = list(title = list(text = "State")))
knitr::opts_chunk$set(echo = TRUE, fig.align = 'center')
knitr::include_graphics("knife.jpg", error = FALSE)
library(tibble) # used to create tibbles
library(tidyr) # used to tidy up data
library(rmarkdown) # dynamic document
library(ggplot2) # used for data visualization
library(dplyr) # used for data manipulation
library(shiny) # used for showing dynamic visuals in collaboration with ggvis
library(prettydoc)# used for creating pretty documents from R markdown
library(knitr)#for dynamic report generation
library(tidyverse)# multiple tidy up data packages here
library(tigris)
library(kableExtra)
#added library for other graphs
library(plotly)
library(rjson)
library(leaflet)
library(leaflet.providers)
library(maps)
library(viridis)
library(viridisLite)
library(sp)
library(quantmod)
library(plot3D)
library(sf)
library(RColorBrewer)
unzip(zipfile="./homicide.zip")
data <- read.csv("database.csv")
glimpse(data)
# This data set is displaying the count in Murder cases by State show that California has one of the highest
data %>% group_by(State) %>% summarize(Murder_Count = n()) %>% arrange(desc(Murder_Count)) %>% kbl() %>% kable_paper() %>% scroll_box(height = "200px")
# Created a plotly histogram of the States counted by Murder Cases.
# The distribution displays the states with the highest amount of cases and the lowest.
# In terms of the lowest its little difficult to see so perhaps should see this closer
data %>%
plot_ly(x = ~State) %>%
add_histogram(color = I("red"),
stroke = I("black"),
span = I(2)
, alpha = 0.6) %>% group_by(State) %>%
summarise(Murder_Count = n()) %>% layout(title = "Histogram of States count by Murder Cases", xaxis = list(title = "States"), yaxis = list(title = "Murder Case Count"))
#Lets see the highest States with Murder cases and lowest
top10_Murder_Cases <- data %>% group_by(State) %>% summarize(Murder_Count = n()) %>% arrange(desc(Murder_Count)) %>% head(10)
top10_Murder_Cases
# I shown the top Murder Cases count in the Histogram to compare
top10_Murder_Cases %>% plot_ly(x = ~Murder_Count, y = ~State, color = I("dark red"),
stroke = I("black"),
span = I(2)
, alpha = 0.6)%>% layout(title = "Histogram of top 10 States By Murder Case", xaxis = list(title = "States"), yaxis = list(title = "Murder Case Count"))
# I did the same with the bottom 10
bottom10_Murder_Cases <- data %>% group_by(State) %>% summarize(Murder_Count = n()) %>% arrange(Murder_Count) %>% head(10)
bottom10_Murder_Cases
bottom10_Murder_Cases %>% plot_ly(x = ~Murder_Count, y = ~State, color = I("dark blue"),
stroke = I("black"),
span = I(2)
, alpha = 0.6)%>% layout(title = "Histogram of Bottom 10 States By Murder Case", xaxis = list(title = "States"), yaxis = list(title = "Murder Case Count"))
# This is the heatmap of the United States based on Murder Count
# The reason for the heatmap to visually see the differences in Murder Cases
states <- states(cb = TRUE, class = "sf") %>%
filter(!as.numeric(STATEFP) %in% c(2, 15, 60, 66, 69, 72, 78)) %>%
mutate(var = rnorm(nrow(.)))
# Created a dataset for the preperation of joining the dataset with the states dataset
data_murder_by_states <- data %>% group_by(State) %>% summarize(murder = n()) %>% arrange(desc(murder))
# Joining the dataset together for the heatmap
heatmap_data_murder_by_states <- states %>% left_join(data_murder_by_states, by = c('NAME' = 'State'))
# The heatmap of the states labeled and even with names on the states
ggplot(heatmap_data_murder_by_states) +
geom_sf(aes(fill = murder ), colour = alpha("black", 1 / 2), size = 0.2) +
scale_fill_viridis_c(option = "turbo" ,
begin = 0.1, name = "Murder Count",label = scales::comma) + geom_sf_text(aes(label = NAME), colour = "black") +
labs(title = "Heat Map of the United States",
subtitle = "Count by Murder in each State") + theme(panel.background = element_rect(colour = "black")) +
theme_bw()
# This is a heatmap of Cities in California of Murder Case count
# The data shows most of the Murder cases are centralized in denser areas such as the populated cities which makes sense since higher population.
# Its important to see why the states with higher counts of cases
California <- tigris:: counties(state = "CA", cb = T, class ='sf')
Data_City_by_Murder <- data %>% group_by(City) %>% summarize(Murder = n()) %>% arrange(desc(Murder))
heat_map_of_California <- California %>% left_join(Data_City_by_Murder, by = c("NAME" = 'City'))
# This is the heatmap for California
ggplot(data = heat_map_of_California) + geom_sf(aes(fill = Murder), color = "black", size = 0.5) + scale_fill_viridis_c(option = "mako" , begin = 0.1, label = scales::comma) + stat_sf_coordinates() + theme(legend.position="right",
plot.title = element_text(hjust = 0.5,color = "dark red", size = 16, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,color = "dark red", size = 14, face = "bold"),
plot.caption = element_text(color = "dark grey"))+
guides(fill = guide_legend(title = "Murder Count", title.position = "top", title.theme =element_text(size = 10, face = "bold",colour = "Black",angle = 0))) + geom_sf_text(aes(label = NAME), colour = "dark grey", alpha = 0.6) + labs(title = "Murder Count by Cities in California", subtitle = "1980 to 2014")
# This is the heatmap for Texas based on counties. The reason I did counties for Texas due to the immense size compared to other states.
Texas <- tigris:: counties(state = "TX", cb = T, class ='sf')
Data_City_by_Murder <- data %>% group_by(City) %>% summarize(Murder = n()) %>% arrange(desc(Murder))
heat_map_of_Texas <- Texas %>% left_join(Data_City_by_Murder, by = c("NAME" = 'City'))
ggplot(heat_map_of_Texas) + geom_sf(aes(fill = Murder)) + scale_fill_viridis_c(option = "inferno" , begin = 0.1, label = scales::comma) + stat_sf_coordinates() + theme(legend.position="right",
plot.title = element_text(hjust = 0.5,color = "dark red", size = 16, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, color = "dark red", size = 14, face = "bold"),
plot.caption = element_text(color = "Gray60"))+
guides(fill = guide_legend(title = "Murder Count", title.position = "top", title.theme =element_text(size = 10, face = "bold",colour = "Black",angle = 0))) + geom_sf_text(aes(label = NAME), colour = "grey", alpha = 0.6) + labs(title = "Murder Count by Counties in Texas", subtitle = "1980 to 2014")
#This is the heatmap of New York
New_York <- tigris:: counties(state = "NY", cb = T, class ='sf')
Data_City_by_Murder <- data %>% group_by(City) %>% summarize(Murder = n()) %>% arrange(desc(Murder))
heat_map_of_New_York <- New_York %>% left_join(Data_City_by_Murder, by = c("NAME" = 'City'))
ggplot(heat_map_of_New_York) + geom_sf(aes(fill = Murder)) + scale_fill_viridis_c(option = "magma" , begin = 0.1, label = scales::comma) + stat_sf_coordinates() + theme(legend.position="right",
plot.title = element_text(hjust = 0.5,color = "dark red", size = 16, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, color = "dark red", size = 14, face = "bold"),
plot.caption = element_text(color = "Gray60"))+
guides(fill = guide_legend(title = "Murder Count", title.position = "top", title.theme =element_text(size = 10, face = "bold",colour = "Black",angle = 0))) + geom_sf_text(aes(label = NAME), colour = "grey", alpha = 0.6) + labs(title = "Murder Count by Counties in New York", subtitle = "1980 to 2014")
#Here want to see data of most weapon used by counting each case of each weapon. Handgun seem to be the highest. Noticing in this dataset can notice there are unknowns scattered in the data.
# Can plot it to see more of the reason why there are unknowns
data %>% group_by(Weapon) %>% summarize(Most_Weapon_Used = n()) %>% arrange(desc(Most_Weapon_Used)) %>% kable() %>% kable_paper() %>% scroll_box(height = "200px")
Weapon_Data_State <- data %>% group_by(State, Weapon) %>% summarize(Most_Weapon_Used = n())
# Despite this graph looking very small and grouped you can see the differences in the amount of weapon used in each state
# What is the Unknown weapon used?
#What can infer from the graph in terms of the motive and behavior of killers is most use Handgunds as the most used Weapon in each state.
plot_ly(data = Weapon_Data_State, x = ~State, y = ~Most_Weapon_Used, color = ~Weapon, colors = "Set2") %>% layout(title = "Histograms of Count of Weapons by State", yaxis = list(title = "Weapon Count by State"), legend = list(title = list(text = "Weapon")))
# Looking into the dataset with gender already notice there being Unknown in the dataset
data %>% group_by(Victim.Sex) %>% summarize(Gender_Count = n())
# simple bar graph of the number of Genders in a bar graph
data %>% group_by(Victim.Sex) %>% summarize(Gender_Count = n()) %>% ggplot(aes(x = Victim.Sex, y = Gender_Count, fill = Victim.Sex, )) + geom_col(color = "Black") + ggtitle("Simple bar Graph of the Genders", subtitle = "By Count of Murder Cases to the Gender") +
labs(x = "Gender", Y = "Murder Cases") + theme(plot.title = element_text(color="red", size=14, face="bold.italic"),
axis.title.x = element_text(color="blue", size=14, face="bold"),
axis.title.y = element_text(color="#993333", size=14, face="bold"))
# Here I took the dataset to combine the total amount of Female count by state with Male total count together into 1 dataset to compare it.
# I even have one with the unknown to compare it
Female_Data <-  data %>% group_by(State, Victim.Sex) %>% summarize(Female_Total = n()) %>% filter(Victim.Sex == "Female")
# made a male data set of count
Male_Data <- data %>% group_by(State, Victim.Sex) %>% summarize(Male_Total = n()) %>% filter(Victim.Sex == "Male")
# made male dataset
Unknown_Data <- data %>% group_by(State, Victim.Sex) %>% summarize(Unknown_Total = n()) %>% filter(Victim.Sex == "Unknown")
Gender_Data <- Female_Data %>% left_join(Male_Data, by = "State")
Gender_Data_with_Total<- Gender_Data %>% mutate(Sum_Gender = Female_Total + Male_Total)
Gender_Data_plus_Unknown <- Gender_Data %>% left_join(Unknown_Data, by = "State")
Gender_Data_for_3D <- Gender_Data_plus_Unknown %>% mutate(Unknown_Total = ifelse(is.na(Unknown_Total), 0, Unknown_Total)) %>% mutate(Sum_Gender = Female_Total + Male_Total + Unknown_Total)
Gender_Data_with_Total %>% ggplot(aes(x = Female_Total, y = Male_Total)) + geom_point()
# This is the bubble map
plot_ly(Gender_Data_with_Total, x = ~Female_Total, y = ~Male_Total, text = ~State, type = 'scatter', mode = 'markers', size = ~Sum_Gender, color = ~State, colors = "Set2",
#Choosing the range of the bubbles' sizes:
sizes = c(10, 50),
marker = list(opacity = 0.5, sizemode = 'diameter'))  %>% layout(title = "Bubble Graph of Female and Male total Murder Cases", subtitle = "By States", xaxis = list(title = "Female") , yaxis = list(title = "Male"), legend = list(title = list(text = "State")))
Gender_heatmap <- states %>% left_join(Gender_Data_for_3D, by = c("NAME" = "State"))
ggplot(Gender_heatmap) +
geom_sf(aes(fill = Female_Total), colour = alpha("black", 1 / 2), size = 0.2) +
scale_fill_viridis_c(option = "plasma" ,
begin = 0.1, name = "Murder Count",label = scales::comma) + geom_sf_text(aes(label = NAME), colour = "black") +
labs(title = "Heat Map by Female Murder Cases",
subtitle = " By each State") + theme(panel.background = element_rect(colour = "black")) +
theme_bw()
ggplot(Gender_heatmap) +
geom_sf(aes(fill = Male_Total), colour = alpha("black", 1 / 2), size = 0.2) +
scale_fill_viridis_c(option = "brewer blues" ,
begin = 0.1, name = "Murder Count",label = scales::comma) + geom_sf_text(aes(label = NAME), colour = "black") +
labs(title = "Heat Map by Male Murder Cases",
subtitle = "By each State") + theme(panel.background = element_rect(colour = "black")) +
theme_bw()
# Graph for cases by age
data %>% group_by(Victim.Age) %>% summarize(Count_Vicitim = n()) %>% arrange(desc(Victim.Age)) %>% kable() %>% kable_paper() %>% scroll_box(height = "200px")
data %>% ggplot(aes(Victim.Age)) + geom_histogram(binwidth = 50)
# From then, we see that there are many cases with nearly 1000 year-old victims.
# Doesn't make sense so then we proceeded to
# filter our data to make it more neat and coherent.
```
knitr::include_graphics("thankyou.jpg")
knitr::opts_chunk$set(echo = TRUE, fig.align = 'center')
library(tidyverse)
library(tibble) # used to create tibbles
library(tidyr) # used to tidy up data
library(rmarkdown) # dynamic document
library(ggplot2) # used for data visualization
library(dplyr) # used for data manipulation
library(shiny) # used for showing dynamic visuals in collaboration with ggvis
library(prettydoc)# used for creating pretty documents from R markdown
library(knitr)#for dynamic report generation
library(tidyverse)# multiple tidy up data packages here
library(hms) # used to install kableExtra package
library(kableExtra) # used to construct Complex Table for data
library(dplyr) # used to install tigris package
library(tigris) # used to make states map
#added library for other graphs
library(plotly)
library(rjson)
library(leaflet)
library(leaflet.providers)
library(maps)
library(viridis)
library(viridisLite)
library(sp)
library(quantmod)
library(plot3D)
library(sf)
library(RColorBrewer)
library(gganimate)
unzip(zipfile="./homicide.zip")
data <- read.csv("database.csv")
glimpse(data)
data %>% group_by(State) %>%
summarize(Murder_Count = n()) %>%
arrange(desc(Murder_Count)) %>%
kbl() %>% kable_paper()  %>% scroll_box(height = "800px")
data %>%
plot_ly(x = ~State) %>%
add_histogram(color = I("red"),
stroke = I("black"),
span = I(2)
, alpha = 0.6) %>% group_by(State) %>%
summarise(Murder_Count = n()) %>%
layout(title = "Histogram of States count by Murder Cases", xaxis = list(title = "States"), yaxis = list(title = "Murder Case Count"))
top10_Murder_Cases <- data %>% group_by(State) %>% summarize(Murder_Count = n()) %>% arrange(desc(Murder_Count)) %>% head(10)
top10_Murder_Cases
# I shown the top Murder Cases count in the Histogram to compare
top10_Murder_Cases %>% plot_ly(x = ~Murder_Count, y = ~State, color = I("dark red"),
stroke = I("black"),
span = I(2)
, alpha = 0.6)%>% layout(title = "Histogram of top 10 States By Murder Case", xaxis = list(title = "States"), yaxis = list(title = "Murder Case Count"))
data %>% group_by(Weapon) %>%
summarize(Most_Weapon_Used = n()) %>%
arrange(desc(Most_Weapon_Used)) %>%
kbl() %>% kable_paper() %>% scroll_box(height = "800px")
states <- states(cb = TRUE, class = "sf") %>%
filter(!as.numeric(STATEFP) %in% c(2, 15, 60, 66, 69, 72, 78)) %>%
mutate(var = rnorm(nrow(.)))
data_murder_by_states <- data %>% group_by(State) %>% summarize(murder = n()) %>% arrange(desc(murder))
heatmap_data_murder_by_states <- states %>% left_join(data_murder_by_states, by = c('NAME' = 'State'))
ggplot(heatmap_data_murder_by_states) +
geom_sf(aes(fill = murder ), colour = alpha("black", 1 / 2), size = 0.2) +
scale_fill_viridis_c(option = "turbo" ,
begin = 0.1, name = "Murder Count",label = scales::comma) + geom_sf_text(aes(label = ~murder), colour = "black") +
labs(title = "Heat Map of the United States",
subtitle = "Count by Murder in each State") +
theme(panel.background = element_rect(colour = "black")) +
theme_bw()
states <- states(cb = TRUE, class = "sf") %>%
filter(!as.numeric(STATEFP) %in% c(2, 15, 60, 66, 69, 72, 78)) %>%
mutate(var = rnorm(nrow(.)))
data_murder_by_states <- data %>% group_by(State) %>% summarize(murder = n()) %>% arrange(desc(murder))
heatmap_data_murder_by_states <- states %>% left_join(data_murder_by_states, by = c('NAME' = 'State'))
ggplot(heatmap_data_murder_by_states) +
geom_sf(aes(fill = murder ), colour = alpha("black", 1 / 2), size = 0.2) +
scale_fill_viridis_c(option = "turbo" ,
begin = 0.1, name = "Murder Count",label = scales::comma) + geom_sf_text(aes(label = murder), colour = "black") +
labs(title = "Heat Map of the United States",
subtitle = "Count by Murder in each State") +
theme(panel.background = element_rect(colour = "black")) +
theme_bw()
states <- states(cb = TRUE, class = "sf") %>%
filter(!as.numeric(STATEFP) %in% c(2, 15, 60, 66, 69, 72, 78)) %>%
mutate(var = rnorm(nrow(.)))
data_murder_by_states <- data %>% group_by(State) %>% summarize(murder = n()) %>% arrange(desc(murder))
heatmap_data_murder_by_states <- states %>% left_join(data_murder_by_states, by = c('NAME' = 'State'))
ggplot(heatmap_data_murder_by_states) +
geom_sf(aes(fill = murder ), colour = alpha("black", 1 / 2), size = 0.2) +
scale_fill_viridis_c(option = "turbo" ,
begin = 0.1, name = "Murder Count",label = scales::comma) + geom_sf_text(aes(label = murder, label = state), colour = "black") +
labs(title = "Heat Map of the United States",
subtitle = "Count by Murder in each State") +
theme(panel.background = element_rect(colour = "black")) +
theme_bw()
states <- states(cb = TRUE, class = "sf") %>%
filter(!as.numeric(STATEFP) %in% c(2, 15, 60, 66, 69, 72, 78)) %>%
mutate(var = rnorm(nrow(.)))
data_murder_by_states <- data %>% group_by(State) %>% summarize(murder = n()) %>% arrange(desc(murder))
heatmap_data_murder_by_states <- states %>% left_join(data_murder_by_states, by = c('NAME' = 'State'))
ggplot(heatmap_data_murder_by_states) +
geom_sf(aes(fill = murder ), colour = alpha("black", 1 / 2), size = 0.2) +
scale_fill_viridis_c(option = "turbo" ,
begin = 0.1, name = "Murder Count",label = scales::comma) + geom_sf_text(aes(label = murder, label = State), colour = "black") +
labs(title = "Heat Map of the United States",
subtitle = "Count by Murder in each State") +
theme(panel.background = element_rect(colour = "black")) +
theme_bw()
states <- states(cb = TRUE, class = "sf") %>%
filter(!as.numeric(STATEFP) %in% c(2, 15, 60, 66, 69, 72, 78)) %>%
mutate(var = rnorm(nrow(.)))
data_murder_by_states <- data %>% group_by(State) %>% summarize(murder = n()) %>% arrange(desc(murder))
heatmap_data_murder_by_states <- states %>% left_join(data_murder_by_states, by = c('NAME' = 'State'))
ggplot(heatmap_data_murder_by_states) +
geom_sf(aes(fill = murder ), colour = alpha("black", 1 / 2), size = 0.2) +
scale_fill_viridis_c(option = "turbo" ,
begin = 0.1, name = "Murder Count",label = scales::comma) + geom_sf_text(aes(label = murder, label = NAME), colour = "black") +
labs(title = "Heat Map of the United States",
subtitle = "Count by Murder in each State") +
theme(panel.background = element_rect(colour = "black")) +
theme_bw()
states <- states(cb = TRUE, class = "sf") %>%
filter(!as.numeric(STATEFP) %in% c(2, 15, 60, 66, 69, 72, 78)) %>%
mutate(var = rnorm(nrow(.)))
data_murder_by_states <- data %>% group_by(State) %>% summarize(murder = n()) %>% arrange(desc(murder))
heatmap_data_murder_by_states <- states %>% left_join(data_murder_by_states, by = c('NAME' = 'State'))
ggplot(heatmap_data_murder_by_states) +
geom_sf(aes(fill = murder ), colour = alpha("black", 1 / 2), size = 0.2) +
scale_fill_viridis_c(option = "turbo" ,
begin = 0.1, name = "Murder Count",label = scales::comma) + geom_sf_text(aes(label = c(murder, NAME)), colour = "black") +
labs(title = "Heat Map of the United States",
subtitle = "Count by Murder in each State") +
theme(panel.background = element_rect(colour = "black")) +
theme_bw()
states <- states(cb = TRUE, class = "sf") %>%
filter(!as.numeric(STATEFP) %in% c(2, 15, 60, 66, 69, 72, 78)) %>%
mutate(var = rnorm(nrow(.)))
data_murder_by_states <- data %>% group_by(State) %>% summarize(murder = n()) %>% arrange(desc(murder))
heatmap_data_murder_by_states <- states %>% left_join(data_murder_by_states, by = c('NAME' = 'State'))
ggplot(heatmap_data_murder_by_states) +
geom_sf(aes(fill = murder ), colour = alpha("black", 1 / 2), size = 0.2) +
scale_fill_viridis_c(option = "turbo" ,
begin = 0.1, name = "Murder Count",label = scales::comma) + geom_sf_text(aes(label = murder), colour = "black") +
labs(title = "Heat Map of the United States",
subtitle = "Count by Murder in each State") +
theme(panel.background = element_rect(colour = "black")) +
theme_bw()
states <- states(cb = TRUE, class = "sf") %>%
filter(!as.numeric(STATEFP) %in% c(2, 15, 60, 66, 69, 72, 78)) %>%
mutate(var = rnorm(nrow(.)))
data_murder_by_states <- data %>% group_by(State) %>% summarize(murder = n()) %>% arrange(desc(murder))
heatmap_data_murder_by_states <- states %>% left_join(data_murder_by_states, by = c('NAME' = 'State'))
ggplot(heatmap_data_murder_by_states) +
geom_sf(aes(fill = murder ), colour = alpha("black", 1 / 2), size = 0.2) +
scale_fill_viridis_c(option = "turbo" ,
begin = 0.1, name = "Murder Count",label = scales::comma) + geom_sf_text(aes(label = murder), (label = NAME), colour = "black") +
labs(title = "Heat Map of the United States",
subtitle = "Count by Murder in each State") +
theme(panel.background = element_rect(colour = "black")) +
theme_bw()
heatmap_data_murder_by_states
states <- states(cb = TRUE, class = "sf") %>%
filter(!as.numeric(STATEFP) %in% c(2, 15, 60, 66, 69, 72, 78)) %>%
mutate(var = rnorm(nrow(.)))
data_murder_by_states <- data %>% group_by(State) %>% summarize(murder = n()) %>% arrange(desc(murder))
heatmap_data_murder_by_states <- states %>% left_join(data_murder_by_states, by = c('NAME' = 'State'))
ggplot(heatmap_data_murder_by_states) +
geom_sf(aes(fill = murder ), colour = alpha("black", 1 / 2), size = 0.2) +
scale_fill_viridis_c(option = "turbo" ,
begin = 0.1, name = "Murder Count",label = scales::comma) + geom_sf_text(aes(label = murder), (label = NAME), colour = "black") +
labs(title = "Heat Map of the United States",
subtitle = "Count by Murder in each State") +
theme(panel.background = element_rect(colour = "black")) +
theme_bw()
states <- states(cb = TRUE, class = "sf") %>%
filter(!as.numeric(STATEFP) %in% c(2, 15, 60, 66, 69, 72, 78)) %>%
mutate(var = rnorm(nrow(.)))
data_murder_by_states <- data %>% group_by(State) %>% summarize(murder = n()) %>% arrange(desc(murder))
heatmap_data_murder_by_states <- states %>% left_join(data_murder_by_states, by = c('NAME' = 'State'))
ggplot(heatmap_data_murder_by_states) +
geom_sf(aes(fill = murder ), colour = alpha("black", 1 / 2), size = 0.2) +
scale_fill_viridis_c(option = "turbo" ,
begin = 0.1, name = "Murder Count",label = scales::comma) + geom_sf_text(aes(label = murder), colour = "black") +
labs(title = "Heat Map of the United States",
subtitle = "Count by Murder in each State") +
theme(panel.background = element_rect(colour = "black")) +
theme_bw()
states <- states(cb = TRUE, class = "sf") %>%
filter(!as.numeric(STATEFP) %in% c(2, 15, 60, 66, 69, 72, 78)) %>%
mutate(var = rnorm(nrow(.)))
data_murder_by_states <- data %>% group_by(State) %>% summarize(murder = n()) %>% arrange(desc(murder))
heatmap_data_murder_by_states <- states %>% left_join(data_murder_by_states, by = c('NAME' = 'State'))
ggplot(heatmap_data_murder_by_states) +
geom_sf(aes(fill = murder ), colour = alpha("black", 1 / 2), size = 0.2) +
scale_fill_viridis_c(option = "turbo" ,
begin = 0.1, name = "Murder Count",label = scales::comma) + geom_sf_text(aes(label = murder), colour = "black") +
labs(title = "Heat Map of the United States",
subtitle = "Count by Murder in each State") +
theme(panel.background = element_rect(colour = "black")) +
theme_bw()
Texas <- tigris:: counties(state = "TX", cb = T, class ='sf')
Data_City_by_Murder <- data %>% group_by(City) %>% summarize(Murder = n()) %>% arrange(desc(Murder))
heat_map_of_Texas <- Texas %>% left_join(Data_City_by_Murder, by = c("NAME" = 'City'))
ggplot(heat_map_of_Texas) + geom_sf(aes(fill = Murder)) + scale_fill_viridis_c(option = "inferno" , begin = 0.1, label = scales::comma) + stat_sf_coordinates() + theme(legend.position="right",
plot.title = element_text(hjust = 0.5,color = "dark red", size = 16, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, color = "dark red", size = 14, face = "bold"),
plot.caption = element_text(color = "Gray60"))+
guides(fill = guide_legend(title = "Murder Count", title.position = "top", title.theme =element_text(size = 10, face = "bold",colour = "Black",angle = 0))) + geom_sf_text(aes(label = NAME), colour = "grey", alpha = 0.6) + labs(title = "Murder Count by Counties in Texas", subtitle = "1980 to 2014")
# Here I took the dataset to combine the total amount of Female count by state with Male total count together into 1 dataset to compare it.
# I even have one with the unknown to compare it
Female_Data <-  data %>% group_by(State, Victim.Sex) %>% summarize(Female_Total = n()) %>% filter(Victim.Sex == "Female")
# made a male data set of count
Male_Data <- data %>% group_by(State, Victim.Sex) %>% summarize(Male_Total = n()) %>% filter(Victim.Sex == "Male")
# made male dataset
Unknown_Data <- data %>% group_by(State, Victim.Sex) %>% summarize(Unknown_Total = n()) %>% filter(Victim.Sex == "Unknown")
Gender_Data <- Female_Data %>% left_join(Male_Data, by = "State")
Gender_Data_with_Total<- Gender_Data %>% mutate(Sum_Gender = Female_Total + Male_Total)
Gender_Data_plus_Unknown <- Gender_Data %>% left_join(Unknown_Data, by = "State")
Gender_Data_for_3D <- Gender_Data_plus_Unknown %>% mutate(Unknown_Total = ifelse(is.na(Unknown_Total), 0, Unknown_Total)) %>% mutate(Sum_Gender = Female_Total + Male_Total + Unknown_Total)
Gender_heatmap <- states %>% left_join(Gender_Data_for_3D, by = c("NAME" = "State"))
ggplot(Gender_heatmap) +
geom_sf(aes(fill = Female_Total), colour = alpha("black", 1 / 2), size = 0.2) +
scale_fill_viridis_c(option = "plasma" ,
begin = 0.1, name = "Murder Count",label = scales::comma) + geom_sf_text(aes(label = NAME), colour = "black") +
labs(title = "Heat Map by Female Murder Cases",
subtitle = " By each State") + theme(panel.background = element_rect(colour = "black")) +
theme_bw()
ggplot(Gender_heatmap) +
geom_sf(aes(fill = Male_Total), colour = alpha("black", 1 / 2), size = 0.2) +
scale_fill_viridis_c(option = "brewer blues" ,
begin = 0.1, name = "Murder Count",label = scales::comma) + geom_sf_text(aes(label = NAME), colour = "black") +
labs(title = "Heat Map by Male Murder Cases",
subtitle = "By each State") + theme(panel.background = element_rect(colour = "black")) +
theme_bw()
Gender_heatmap
ggplot(Gender_heatmap) +
geom_sf(aes(fill = Female_Total), colour = alpha("black", 1 / 2), size = 0.2) +
scale_fill_viridis_c(option = "plasma" ,
begin = 0.1, name = "Murder Count",label = scales::comma) + geom_sf_text(aes(label = Female_Total), colour = "black") +
labs(title = "Heat Map by Female Murder Cases",
subtitle = " By each State") + theme(panel.background = element_rect(colour = "black")) +
theme_bw()
ggplot(Gender_heatmap) +
geom_sf(aes(fill = Male_Total), colour = alpha("black", 1 / 2), size = 0.2) +
scale_fill_viridis_c(option = "brewer blues" ,
begin = 0.1, name = "Murder Count",label = scales::comma) + geom_sf_text(aes(label = Female_Total), colour = "black") +
labs(title = "Heat Map by Male Murder Cases",
subtitle = "By each State") + theme(panel.background = element_rect(colour = "black")) +
theme_bw()
knitr::opts_chunk$set(echo = TRUE, fig.align = 'center')
library(tidyverse)
filtered_data <- data %>%
select(Year, Victim.Age, Victim.Sex, Relationship, Weapon) %>%
filter(Relationship != 'Unknown') %>%
filter(Weapon != 'Unknown') %>%
filter(Victim.Sex != 'Unknown') %>%
filter(Victim.Age %in% c(1:100))
glimpse(filtered_data)
# How many cases by year?
filtered_data %>% count(Year)  %>%
kbl() %>% kable_paper()  %>% scroll_box(height = "800px")
knitr::opts_chunk$set(echo = TRUE, fig.align = 'center')
# The rate of murders during the period of 1980-2014
filtered_data %>%
group_by(Year) %>%
summarise(murder = n()) %>%
ggplot(aes(Year,murder)) + geom_point() + geom_smooth()
#Define if they know each other
relationship_data <- filtered_data %>%
mutate(Relationship_with_murder = (Relationship == "Stranger")) %>%
mutate_all(funs(replace(.,. == "TRUE", "Unknown"))) %>%
mutate_all (funs(replace(.,. == "FALSE", "Known")))
knitr::opts_chunk$set(echo = TRUE, fig.align = 'center')
knitr::include_graphics("knife.jpg", error = FALSE)
